@array = global [110 x i32] zeroinitializer, align 16
@n = global i32 0, align 4
define void @init(i32 %t0) {
	%l1 = alloca i32, align 4
	%l2 = alloca i32, align 4
	store i32 %t0, i32* %l1, align 4
	store i32 1, i32* %l2, align 4
	br label %.L0
.L0:
	%t11 = load i32, i32* %l1, align 4
	%t12 = load i32, i32* %l1, align 4
	%t3 = mul nsw i32 %t11, %t12
	%t4 = add nsw i32 %t3, 1
	%t13 = load i32, i32* %l2, align 4
	%t5 = icmp sle i32 %t13, %t4
	br i1 %t5, label %.L1, label %.L14
.L1:
	%t6 = sub nsw i32 0, 1
	%t14 = load i32, i32* %l2, align 4
	%t7 = mul nsw i32 %t14, 1
	%t8 = mul nsw i32 %t7, 4
	%t15 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t16 = bitcast i32* %t15 to i8*
	%t18 = sext i32 %t8 to i64
	%t17 = getelementptr inbounds i8, i8* %t16, i64 %t18
	%t9 = bitcast i8* %t17 to i32*
	store i32 %t6, i32* %t9, align 4
	%t19 = load i32, i32* %l2, align 4
	%t10 = add nsw i32 %t19, 1
	store i32 %t10, i32* %l2, align 4
	br label %.L0
.L14:
	ret void
}
define i32 @findfa(i32 %t0) {
	%l1 = alloca i32, align 4
	%l2 = alloca i32, align 4
	%l3 = alloca i32, align 4
	%l4 = alloca i32, align 4
	%l5 = alloca i32, align 4
	store i32 %t0, i32* %l1, align 4
	%t20 = load i32, i32* %l1, align 4
	%t6 = mul nsw i32 %t20, 1
	%t7 = mul nsw i32 %t6, 4
	%t21 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t22 = bitcast i32* %t21 to i8*
	%t24 = sext i32 %t7 to i64
	%t23 = getelementptr inbounds i8, i8* %t22, i64 %t24
	%t8 = bitcast i8* %t23 to i32*
	%t25 = load i32, i32* %t8, align 4
	store i32 %t25, i32* %l3, align 4
	%t26 = load i32, i32* %l3, align 4
	%t27 = load i32, i32* %l1, align 4
	%t9 = icmp eq i32 %t26, %t27
	br i1 %t9, label %.L0, label %.L1
.L0:
	%t28 = load i32, i32* %l1, align 4
	store i32 %t28, i32* %l2, align 4
	br label %.L23
.L1:
	%t29 = load i32, i32* %l1, align 4
	%t10 = mul nsw i32 %t29, 1
	%t11 = mul nsw i32 %t10, 4
	%t30 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t31 = bitcast i32* %t30 to i8*
	%t33 = sext i32 %t11 to i64
	%t32 = getelementptr inbounds i8, i8* %t31, i64 %t33
	%t12 = bitcast i8* %t32 to i32*
	%t34 = load i32, i32* %t12, align 4
	store i32 %t34, i32* %l4, align 4
	%t35 = load i32, i32* %l4, align 4
	%t13 = call i32 @findfa(i32 %t35)
	%t36 = load i32, i32* %l1, align 4
	%t14 = mul nsw i32 %t36, 1
	%t15 = mul nsw i32 %t14, 4
	%t37 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t38 = bitcast i32* %t37 to i8*
	%t40 = sext i32 %t15 to i64
	%t39 = getelementptr inbounds i8, i8* %t38, i64 %t40
	%t16 = bitcast i8* %t39 to i32*
	store i32 %t13, i32* %t16, align 4
	%t41 = load i32, i32* %l1, align 4
	%t17 = mul nsw i32 %t41, 1
	%t18 = mul nsw i32 %t17, 4
	%t42 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t43 = bitcast i32* %t42 to i8*
	%t45 = sext i32 %t18 to i64
	%t44 = getelementptr inbounds i8, i8* %t43, i64 %t45
	%t19 = bitcast i8* %t44 to i32*
	%t46 = load i32, i32* %t19, align 4
	store i32 %t46, i32* %l5, align 4
	%t47 = load i32, i32* %l5, align 4
	store i32 %t47, i32* %l2, align 4
	br label %.L23
.L23:
	%t48 = load i32, i32* %l2, align 4
	ret i32 %t48
}
define void @mmerge(i32 %t0, i32 %t1) {
	%l2 = alloca i32, align 4
	%l3 = alloca i32, align 4
	%l4 = alloca i32, align 4
	%l5 = alloca i32, align 4
	store i32 %t0, i32* %l2, align 4
	store i32 %t1, i32* %l3, align 4
	%t12 = load i32, i32* %l2, align 4
	%t6 = call i32 @findfa(i32 %t12)
	store i32 %t6, i32* %l4, align 4
	%t13 = load i32, i32* %l3, align 4
	%t7 = call i32 @findfa(i32 %t13)
	store i32 %t7, i32* %l5, align 4
	%t14 = load i32, i32* %l4, align 4
	%t15 = load i32, i32* %l5, align 4
	%t8 = icmp ne i32 %t14, %t15
	br i1 %t8, label %.L0, label %.L14
.L0:
	%t16 = load i32, i32* %l4, align 4
	%t9 = mul nsw i32 %t16, 1
	%t10 = mul nsw i32 %t9, 4
	%t17 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t18 = bitcast i32* %t17 to i8*
	%t20 = sext i32 %t10 to i64
	%t19 = getelementptr inbounds i8, i8* %t18, i64 %t20
	%t11 = bitcast i8* %t19 to i32*
	%t21 = load i32, i32* %l5, align 4
	store i32 %t21, i32* %t11, align 4
	br label %.L14
.L14:
	ret void
}
define i32 @main() {
	%l0 = alloca i32, align 4
	%l1 = alloca i32, align 4
	%l10 = alloca i32, align 4
	%l11 = alloca i32, align 4
	%l12 = alloca i32, align 4
	%l13 = alloca i32, align 4
	%l14 = alloca i32, align 4
	%l15 = alloca i32, align 4
	%l16 = alloca i32, align 4
	%l2 = alloca i32, align 4
	%l3 = alloca i32, align 4
	%l4 = alloca i32, align 4
	%l5 = alloca i32, align 4
	%l6 = alloca i32, align 4
	%l7 = alloca i32, align 4
	%l8 = alloca i32, align 4
	%l9 = alloca i32, align 4
	store i32 1, i32* %l1, align 4
	br label %.L0
.L0:
	%t100 = load i32, i32* %l1, align 4
	%t17 = icmp ne i32 %t100, 0
	br i1 %t17, label %.L1, label %.L2
.L1:
	%t101 = load i32, i32* %l1, align 4
	%t18 = sub nsw i32 %t101, 1
	store i32 %t18, i32* %l1, align 4
	store i32 4, i32* @n, align 4
	store i32 10, i32* %l2, align 4
	store i32 0, i32* %l5, align 4
	store i32 0, i32* %l6, align 4
	%t102 = load i32, i32* @n, align 4
	call void @init(i32 %t102)
	%t103 = load i32, i32* @n, align 4
	%t104 = load i32, i32* @n, align 4
	%t19 = mul nsw i32 %t103, %t104
	%t20 = add nsw i32 %t19, 1
	store i32 %t20, i32* %l7, align 4
	br label %.L3
.L3:
	%t105 = load i32, i32* %l5, align 4
	%t106 = load i32, i32* %l2, align 4
	%t21 = icmp slt i32 %t105, %t106
	br i1 %t21, label %.L4, label %.L5
.L4:
	%t22 = call i32 (...) @getint()
	store i32 %t22, i32* %l3, align 4
	%t23 = call i32 (...) @getint()
	store i32 %t23, i32* %l4, align 4
	%t107 = load i32, i32* %l6, align 4
	%t24 = icmp ne i32 %t107, 0
	br i1 %t24, label %.L6, label %.L7
.L6:
	%t108 = load i32, i32* %l3, align 4
	%t25 = sub nsw i32 %t108, 1
	%t109 = load i32, i32* @n, align 4
	%t26 = mul nsw i32 %t109, %t25
	%t110 = load i32, i32* %l4, align 4
	%t27 = add nsw i32 %t26, %t110
	store i32 %t27, i32* %l8, align 4
	%t111 = load i32, i32* %l8, align 4
	%t28 = mul nsw i32 %t111, 1
	%t29 = mul nsw i32 %t28, 4
	%t112 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t113 = bitcast i32* %t112 to i8*
	%t115 = sext i32 %t29 to i64
	%t114 = getelementptr inbounds i8, i8* %t113, i64 %t115
	%t30 = bitcast i8* %t114 to i32*
	%t116 = load i32, i32* %l8, align 4
	store i32 %t116, i32* %t30, align 4
	%t117 = load i32, i32* %l3, align 4
	%t31 = icmp eq i32 %t117, 1
	br i1 %t31, label %.L8, label %.L9
.L8:
	%t32 = mul nsw i32 0, 1
	%t33 = mul nsw i32 %t32, 4
	%t118 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t119 = bitcast i32* %t118 to i8*
	%t121 = sext i32 %t33 to i64
	%t120 = getelementptr inbounds i8, i8* %t119, i64 %t121
	%t34 = bitcast i8* %t120 to i32*
	store i32 0, i32* %t34, align 4
	%t122 = load i32, i32* %l8, align 4
	call void @mmerge(i32 %t122, i32 0)
	br label %.L9
.L9:
	%t123 = load i32, i32* %l3, align 4
	%t124 = load i32, i32* @n, align 4
	%t35 = icmp eq i32 %t123, %t124
	br i1 %t35, label %.L10, label %.L11
.L10:
	%t125 = load i32, i32* %l7, align 4
	%t36 = mul nsw i32 %t125, 1
	%t37 = mul nsw i32 %t36, 4
	%t126 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t127 = bitcast i32* %t126 to i8*
	%t129 = sext i32 %t37 to i64
	%t128 = getelementptr inbounds i8, i8* %t127, i64 %t129
	%t38 = bitcast i8* %t128 to i32*
	%t130 = load i32, i32* %l7, align 4
	store i32 %t130, i32* %t38, align 4
	%t131 = load i32, i32* %l8, align 4
	%t132 = load i32, i32* %l7, align 4
	call void @mmerge(i32 %t131, i32 %t132)
	br label %.L11
.L11:
	%t133 = load i32, i32* %l4, align 4
	%t134 = load i32, i32* @n, align 4
	%t39 = icmp slt i32 %t133, %t134
	%t40 = icmp ne i1 %t39, 0
	br i1 %t40, label %.L14, label %.L13
.L14:
	%t135 = load i32, i32* %l8, align 4
	%t41 = add nsw i32 %t135, 1
	%t42 = mul nsw i32 %t41, 1
	%t43 = mul nsw i32 %t42, 4
	%t136 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t137 = bitcast i32* %t136 to i8*
	%t139 = sext i32 %t43 to i64
	%t138 = getelementptr inbounds i8, i8* %t137, i64 %t139
	%t44 = bitcast i8* %t138 to i32*
	%t140 = load i32, i32* %t44, align 4
	store i32 %t140, i32* %l9, align 4
	%t45 = sub nsw i32 0, 1
	%t141 = load i32, i32* %l9, align 4
	%t46 = icmp ne i32 %t141, %t45
	%t47 = icmp ne i1 %t46, 0
	br i1 %t47, label %.L12, label %.L13
.L12:
	%t142 = load i32, i32* %l8, align 4
	%t48 = add nsw i32 %t142, 1
	%t143 = load i32, i32* %l8, align 4
	call void @mmerge(i32 %t143, i32 %t48)
	br label %.L13
.L13:
	%t144 = load i32, i32* %l4, align 4
	%t49 = icmp sgt i32 %t144, 1
	%t50 = icmp ne i1 %t49, 0
	br i1 %t50, label %.L18, label %.L17
.L18:
	%t145 = load i32, i32* %l8, align 4
	%t51 = sub nsw i32 %t145, 1
	%t52 = mul nsw i32 %t51, 1
	%t53 = mul nsw i32 %t52, 4
	%t146 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t147 = bitcast i32* %t146 to i8*
	%t149 = sext i32 %t53 to i64
	%t148 = getelementptr inbounds i8, i8* %t147, i64 %t149
	%t54 = bitcast i8* %t148 to i32*
	%t150 = load i32, i32* %t54, align 4
	store i32 %t150, i32* %l10, align 4
	%t55 = sub nsw i32 0, 1
	%t151 = load i32, i32* %l10, align 4
	%t56 = icmp ne i32 %t151, %t55
	%t57 = icmp ne i1 %t56, 0
	br i1 %t57, label %.L16, label %.L17
.L16:
	%t152 = load i32, i32* %l8, align 4
	%t58 = sub nsw i32 %t152, 1
	%t153 = load i32, i32* %l8, align 4
	call void @mmerge(i32 %t153, i32 %t58)
	br label %.L17
.L17:
	%t154 = load i32, i32* %l3, align 4
	%t155 = load i32, i32* @n, align 4
	%t59 = icmp slt i32 %t154, %t155
	%t60 = icmp ne i1 %t59, 0
	br i1 %t60, label %.L22, label %.L21
.L22:
	%t156 = load i32, i32* %l8, align 4
	%t157 = load i32, i32* @n, align 4
	%t61 = add nsw i32 %t156, %t157
	%t62 = mul nsw i32 %t61, 1
	%t63 = mul nsw i32 %t62, 4
	%t158 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t159 = bitcast i32* %t158 to i8*
	%t161 = sext i32 %t63 to i64
	%t160 = getelementptr inbounds i8, i8* %t159, i64 %t161
	%t64 = bitcast i8* %t160 to i32*
	%t162 = load i32, i32* %t64, align 4
	store i32 %t162, i32* %l11, align 4
	%t65 = sub nsw i32 0, 1
	%t163 = load i32, i32* %l11, align 4
	%t66 = icmp ne i32 %t163, %t65
	%t67 = icmp ne i1 %t66, 0
	br i1 %t67, label %.L20, label %.L21
.L20:
	%t164 = load i32, i32* %l8, align 4
	%t165 = load i32, i32* @n, align 4
	%t68 = add nsw i32 %t164, %t165
	%t166 = load i32, i32* %l8, align 4
	call void @mmerge(i32 %t166, i32 %t68)
	br label %.L21
.L21:
	%t167 = load i32, i32* %l3, align 4
	%t69 = icmp sgt i32 %t167, 1
	%t70 = icmp ne i1 %t69, 0
	br i1 %t70, label %.L26, label %.L25
.L26:
	%t168 = load i32, i32* %l8, align 4
	%t169 = load i32, i32* @n, align 4
	%t71 = sub nsw i32 %t168, %t169
	%t72 = mul nsw i32 %t71, 1
	%t73 = mul nsw i32 %t72, 4
	%t170 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t171 = bitcast i32* %t170 to i8*
	%t173 = sext i32 %t73 to i64
	%t172 = getelementptr inbounds i8, i8* %t171, i64 %t173
	%t74 = bitcast i8* %t172 to i32*
	%t174 = load i32, i32* %t74, align 4
	store i32 %t174, i32* %l12, align 4
	%t75 = sub nsw i32 0, 1
	%t175 = load i32, i32* %l12, align 4
	%t76 = icmp ne i32 %t175, %t75
	%t77 = icmp ne i1 %t76, 0
	br i1 %t77, label %.L24, label %.L25
.L24:
	%t176 = load i32, i32* %l8, align 4
	%t177 = load i32, i32* @n, align 4
	%t78 = sub nsw i32 %t176, %t177
	%t178 = load i32, i32* %l8, align 4
	call void @mmerge(i32 %t178, i32 %t78)
	br label %.L25
.L25:
	%t79 = mul nsw i32 0, 1
	%t80 = mul nsw i32 %t79, 4
	%t179 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t180 = bitcast i32* %t179 to i8*
	%t182 = sext i32 %t80 to i64
	%t181 = getelementptr inbounds i8, i8* %t180, i64 %t182
	%t81 = bitcast i8* %t181 to i32*
	%t183 = load i32, i32* %t81, align 4
	store i32 %t183, i32* %l13, align 4
	%t82 = sub nsw i32 0, 1
	%t184 = load i32, i32* %l13, align 4
	%t83 = icmp ne i32 %t184, %t82
	%t84 = icmp ne i1 %t83, 0
	br i1 %t84, label %.L32, label %.L35
.L32:
	%t185 = load i32, i32* %l7, align 4
	%t85 = mul nsw i32 %t185, 1
	%t86 = mul nsw i32 %t85, 4
	%t186 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t187 = bitcast i32* %t186 to i8*
	%t189 = sext i32 %t86 to i64
	%t188 = getelementptr inbounds i8, i8* %t187, i64 %t189
	%t87 = bitcast i8* %t188 to i32*
	%t190 = load i32, i32* %t87, align 4
	store i32 %t190, i32* %l14, align 4
	%t88 = sub nsw i32 0, 1
	%t191 = load i32, i32* %l14, align 4
	%t89 = icmp ne i32 %t191, %t88
	%t90 = icmp ne i1 %t89, 0
	br i1 %t90, label %.L34, label %.L35
.L34:
	store i32 1, i32* %l15, align 4
	br label %.L33
.L35:
	store i32 0, i32* %l15, align 4
	br label %.L33
.L33:
	%t192 = load i32, i32* %l15, align 4
	%t91 = icmp ne i32 %t192, 0
	br i1 %t91, label %.L30, label %.L7
.L30:
	%t92 = call i32 @findfa(i32 0)
	%t193 = load i32, i32* %l7, align 4
	%t93 = call i32 @findfa(i32 %t193)
	%t94 = icmp eq i32 %t92, %t93
	%t95 = icmp ne i1 %t94, 0
	br i1 %t95, label %.L28, label %.L7
.L28:
	store i32 1, i32* %l6, align 4
	%t194 = load i32, i32* %l5, align 4
	%t96 = add nsw i32 %t194, 1
	store i32 %t96, i32* %l16, align 4
	%t195 = load i32, i32* %l16, align 4
	call void @putint(i32 %t195)
	call void @putch(i32 10)
	br label %.L7
.L7:
	%t196 = load i32, i32* %l5, align 4
	%t97 = add nsw i32 %t196, 1
	store i32 %t97, i32* %l5, align 4
	br label %.L3
.L5:
	%t197 = load i32, i32* %l6, align 4
	%t98 = icmp ne i32 %t197, 0
	br i1 %t98, label %.L36, label %.L0
.L36:
	%t99 = sub nsw i32 0, 1
	call void @putint(i32 %t99)
	call void @putch(i32 10)
	br label %.L0
.L2:
	store i32 0, i32* %l0, align 4
	%t198 = load i32, i32* %l0, align 4
	ret i32 %t198
}
declare i32 @getint(...);
declare i32 @getch(...);
declare void @putint(i32);
declare void @putch(i32);
declare void @putstr(i8*);
declare i32 @getarray(i32*);
declare void @putarray(i32, i32*);
declare float @getfloat(...);
declare void @putfloat(float);
declare i32 @getfarray(float*);
declare void @putfarray(i32, float*);
