@arr = global [2 x i32] zeroinitializer, align 16
define i32 @main() {
	%l0 = alloca i32, align 4
	%l1 = alloca i32, align 4
	%l2 = alloca i32, align 4
	%t3 = mul nsw i32 0, 1
	%t4 = mul nsw i32 %t3, 4
	%t11 = getelementptr inbounds [2 x i32], [2 x i32]* @arr, i64 0, i64 0
	%t12 = bitcast i32* %t11 to i8*
	%t14 = sext i32 %t4 to i64
	%t13 = getelementptr inbounds i8, i8* %t12, i64 %t14
	%t5 = bitcast i8* %t13 to i32*
	store i32 1, i32* %t5, align 4
	%t6 = mul nsw i32 1, 1
	%t7 = mul nsw i32 %t6, 4
	%t15 = getelementptr inbounds [2 x i32], [2 x i32]* @arr, i64 0, i64 0
	%t16 = bitcast i32* %t15 to i8*
	%t18 = sext i32 %t7 to i64
	%t17 = getelementptr inbounds i8, i8* %t16, i64 %t18
	%t8 = bitcast i8* %t17 to i32*
	store i32 1, i32* %t8, align 4
	store i32 0, i32* %l1, align 4
	store i32 0, i32* %l2, align 4
	br label %.L0
.L0:
	%t19 = load i32, i32* %l1, align 4
	%t9 = icmp slt i32 %t19, 2
	br i1 %t9, label %.L1, label %.L0
.L1:
	%t20 = load i32, i32* %l1, align 4
	%t10 = add nsw i32 %t20, 1
	store i32 %t10, i32* %l1, align 4
	br label %.L0
}
declare i32 @getint(...);
declare i32 @getch(...);
declare void @putint(i32);
declare void @putch(i32);
declare void @putstr(i8*);
declare i32 @getarray(i32*);
declare void @putarray(i32, i32*);
declare float @getfloat(...);
declare void @putfloat(float);
declare i32 @getfarray(float*);
declare void @putfarray(i32, float*);
