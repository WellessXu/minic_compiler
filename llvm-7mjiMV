@array = global [110 x i32] zeroinitializer, align 16
@n = global i32 0, align 4
define void @init(i32 %t0) {
	%l1 = alloca i32, align 4
	%l2 = alloca i32, align 4
	store i32 %t0, i32* %l1, align 4
	store i32 1, i32* %l2, align 4
	br label %.L3
.L3:
	%t11 = load i32, i32* %l1, align 4
	%t12 = load i32, i32* %l1, align 4
	%t3 = mul nsw i32 %t11, %t12
	%t4 = add nsw i32 %t3, 1
	%t13 = load i32, i32* %l2, align 4
	%t5 = icmp sle i32 %t13, %t4
	br i1 %t5, label %.L4, label %.L2
.L4:
	%t14 = load i32, i32* %l2, align 4
	%t7 = mul nsw i32 %t14, 4
	%t15 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t16 = bitcast i32* %t15 to i8*
	%t18 = sext i32 %t7 to i64
	%t17 = getelementptr inbounds i8, i8* %t16, i64 %t18
	%t6 = bitcast i8* %t17 to i32*
	%t9 = fptosi float 0xbff0000000000000 to i32
	store i32 %t9, i32* %t6, align 4
	%t19 = load i32, i32* %l2, align 4
	%t10 = add nsw i32 %t19, 1
	store i32 %t10, i32* %l2, align 4
	br label %.L3
.L2:
	ret void
}
define i32 @findfa(i32 %t0) {
	%l1 = alloca i32, align 4
	%l2 = alloca i32, align 4
	store i32 %t0, i32* %l1, align 4
	%t20 = load i32, i32* %l1, align 4
	%t4 = mul nsw i32 %t20, 4
	%t21 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t22 = bitcast i32* %t21 to i8*
	%t24 = sext i32 %t4 to i64
	%t23 = getelementptr inbounds i8, i8* %t22, i64 %t24
	%t3 = bitcast i8* %t23 to i32*
	%t6 = load i32, i32* %t3, align 4
	%t25 = load i32, i32* %l1, align 4
	%t7 = icmp eq i32 %t6, %t25
	br i1 %t7, label %.L3, label %.L4
.L3:
	%t26 = load i32, i32* %l1, align 4
	store i32 %t26, i32* %l2, align 4
	br label %.L2
.L4:
	%t27 = load i32, i32* %l1, align 4
	%t12 = mul nsw i32 %t27, 4
	%t28 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t29 = bitcast i32* %t28 to i8*
	%t31 = sext i32 %t12 to i64
	%t30 = getelementptr inbounds i8, i8* %t29, i64 %t31
	%t11 = bitcast i8* %t30 to i32*
	%t14 = load i32, i32* %t11, align 4
	%t15 = call i32 @findfa(i32 %t14)
	%t32 = load i32, i32* %l1, align 4
	%t9 = mul nsw i32 %t32, 4
	%t33 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t34 = bitcast i32* %t33 to i8*
	%t36 = sext i32 %t9 to i64
	%t35 = getelementptr inbounds i8, i8* %t34, i64 %t36
	%t8 = bitcast i8* %t35 to i32*
	store i32 %t15, i32* %t8, align 4
	%t37 = load i32, i32* %l1, align 4
	%t17 = mul nsw i32 %t37, 4
	%t38 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t39 = bitcast i32* %t38 to i8*
	%t41 = sext i32 %t17 to i64
	%t40 = getelementptr inbounds i8, i8* %t39, i64 %t41
	%t16 = bitcast i8* %t40 to i32*
	%t19 = load i32, i32* %t16, align 4
	store i32 %t19, i32* %l2, align 4
	br label %.L2
.L2:
	%t42 = load i32, i32* %l2, align 4
	ret i32 %t42
}
define void @mmerge(i32 %t0, i32 %t1) {
	%l2 = alloca i32, align 4
	%l3 = alloca i32, align 4
	%l4 = alloca i32, align 4
	%l5 = alloca i32, align 4
	store i32 %t0, i32* %l2, align 4
	store i32 %t1, i32* %l3, align 4
	%t12 = load i32, i32* %l2, align 4
	%t6 = call i32 @findfa(i32 %t12)
	store i32 %t6, i32* %l4, align 4
	%t13 = load i32, i32* %l3, align 4
	%t7 = call i32 @findfa(i32 %t13)
	store i32 %t7, i32* %l5, align 4
	%t14 = load i32, i32* %l4, align 4
	%t15 = load i32, i32* %l5, align 4
	%t8 = icmp ne i32 %t14, %t15
	br i1 %t8, label %.L3, label %.L2
.L3:
	%t16 = load i32, i32* %l4, align 4
	%t10 = mul nsw i32 %t16, 4
	%t17 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t18 = bitcast i32* %t17 to i8*
	%t20 = sext i32 %t10 to i64
	%t19 = getelementptr inbounds i8, i8* %t18, i64 %t20
	%t9 = bitcast i8* %t19 to i32*
	%t21 = load i32, i32* %l5, align 4
	store i32 %t21, i32* %t9, align 4
	br label %.L2
.L2:
	ret void
}
define i32 @main() {
	%l0 = alloca i32, align 4
	%l1 = alloca i32, align 4
	%l2 = alloca i32, align 4
	%l3 = alloca i32, align 4
	%l4 = alloca i32, align 4
	%l5 = alloca i32, align 4
	%l6 = alloca i32, align 4
	%l7 = alloca i32, align 4
	%l8 = alloca i32, align 4
	%l9 = alloca i32, align 4
	store i32 1, i32* %l1, align 4
	br label %.L3
.L3:
	%t10 = load i32, i32* %l1, align 4
	%t11 = icmp ne i32 %t10, 0
	br i1 %t11, label %.L4, label %.L5
.L4:
	%t88 = load i32, i32* %l1, align 4
	%t12 = sub nsw i32 %t88, 1
	store i32 %t12, i32* %l1, align 4
	store i32 4, i32* @n, align 4
	store i32 10, i32* %l2, align 4
	store i32 0, i32* %l5, align 4
	store i32 0, i32* %l6, align 4
	%t89 = load i32, i32* @n, align 4
	call void @init(i32 %t89)
	%t90 = load i32, i32* @n, align 4
	%t91 = load i32, i32* @n, align 4
	%t13 = mul nsw i32 %t90, %t91
	%t14 = add nsw i32 %t13, 1
	store i32 %t14, i32* %l7, align 4
	br label %.L6
.L6:
	%t92 = load i32, i32* %l5, align 4
	%t93 = load i32, i32* %l2, align 4
	%t15 = icmp slt i32 %t92, %t93
	br i1 %t15, label %.L7, label %.L8
.L7:
	%t16 = call i32 (...) @getint()
	store i32 %t16, i32* %l3, align 4
	%t17 = call i32 (...) @getint()
	store i32 %t17, i32* %l4, align 4
	%t94 = load i32, i32* %l6, align 4
	%t18 = icmp eq i32 %t94, 0
	br i1 %t18, label %.L9, label %.L11
.L9:
	%t95 = load i32, i32* %l3, align 4
	%t19 = sub nsw i32 %t95, 1
	%t96 = load i32, i32* @n, align 4
	%t20 = mul nsw i32 %t96, %t19
	%t97 = load i32, i32* %l4, align 4
	%t21 = add nsw i32 %t20, %t97
	store i32 %t21, i32* %l8, align 4
	%t98 = load i32, i32* %l8, align 4
	%t23 = mul nsw i32 %t98, 4
	%t99 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t100 = bitcast i32* %t99 to i8*
	%t102 = sext i32 %t23 to i64
	%t101 = getelementptr inbounds i8, i8* %t100, i64 %t102
	%t22 = bitcast i8* %t101 to i32*
	%t103 = load i32, i32* %l8, align 4
	store i32 %t103, i32* %t22, align 4
	%t104 = load i32, i32* %l3, align 4
	%t25 = icmp eq i32 %t104, 1
	br i1 %t25, label %.L12, label %.L14
.L12:
	%t27 = mul nsw i32 0, 4
	%t105 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t106 = bitcast i32* %t105 to i8*
	%t108 = sext i32 %t27 to i64
	%t107 = getelementptr inbounds i8, i8* %t106, i64 %t108
	%t26 = bitcast i8* %t107 to i32*
	store i32 0, i32* %t26, align 4
	%t109 = load i32, i32* %l8, align 4
	call void @mmerge(i32 %t109, i32 0)
	br label %.L14
.L14:
	%t110 = load i32, i32* %l3, align 4
	%t111 = load i32, i32* @n, align 4
	%t29 = icmp eq i32 %t110, %t111
	br i1 %t29, label %.L15, label %.L17
.L15:
	%t112 = load i32, i32* %l7, align 4
	%t31 = mul nsw i32 %t112, 4
	%t113 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t114 = bitcast i32* %t113 to i8*
	%t116 = sext i32 %t31 to i64
	%t115 = getelementptr inbounds i8, i8* %t114, i64 %t116
	%t30 = bitcast i8* %t115 to i32*
	%t117 = load i32, i32* %l7, align 4
	store i32 %t117, i32* %t30, align 4
	%t118 = load i32, i32* %l8, align 4
	%t119 = load i32, i32* %l7, align 4
	call void @mmerge(i32 %t118, i32 %t119)
	br label %.L17
.L17:
	%t120 = load i32, i32* %l4, align 4
	%t121 = load i32, i32* @n, align 4
	%t33 = icmp slt i32 %t120, %t121
	br i1 %t33, label %.L21, label %.L20
.L21:
	%t122 = load i32, i32* %l8, align 4
	%t34 = add nsw i32 %t122, 1
	%t36 = mul nsw i32 %t34, 4
	%t123 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t124 = bitcast i32* %t123 to i8*
	%t126 = sext i32 %t36 to i64
	%t125 = getelementptr inbounds i8, i8* %t124, i64 %t126
	%t35 = bitcast i8* %t125 to i32*
	%t38 = load i32, i32* %t35, align 4
	%t39 = sitofp i32 %t38 to float
	%t40 = fcmp one float %t39, 0xbff0000000000000
	br i1 %t40, label %.L18, label %.L20
.L18:
	%t127 = load i32, i32* %l8, align 4
	%t41 = add nsw i32 %t127, 1
	%t128 = load i32, i32* %l8, align 4
	call void @mmerge(i32 %t128, i32 %t41)
	br label %.L20
.L20:
	%t129 = load i32, i32* %l4, align 4
	%t42 = icmp sgt i32 %t129, 1
	br i1 %t42, label %.L25, label %.L24
.L25:
	%t130 = load i32, i32* %l8, align 4
	%t43 = sub nsw i32 %t130, 1
	%t45 = mul nsw i32 %t43, 4
	%t131 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t132 = bitcast i32* %t131 to i8*
	%t134 = sext i32 %t45 to i64
	%t133 = getelementptr inbounds i8, i8* %t132, i64 %t134
	%t44 = bitcast i8* %t133 to i32*
	%t47 = load i32, i32* %t44, align 4
	%t48 = sitofp i32 %t47 to float
	%t49 = fcmp one float %t48, 0xbff0000000000000
	br i1 %t49, label %.L22, label %.L24
.L22:
	%t135 = load i32, i32* %l8, align 4
	%t50 = sub nsw i32 %t135, 1
	%t136 = load i32, i32* %l8, align 4
	call void @mmerge(i32 %t136, i32 %t50)
	br label %.L24
.L24:
	%t137 = load i32, i32* %l3, align 4
	%t138 = load i32, i32* @n, align 4
	%t51 = icmp slt i32 %t137, %t138
	br i1 %t51, label %.L29, label %.L28
.L29:
	%t139 = load i32, i32* %l8, align 4
	%t140 = load i32, i32* @n, align 4
	%t52 = add nsw i32 %t139, %t140
	%t54 = mul nsw i32 %t52, 4
	%t141 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t142 = bitcast i32* %t141 to i8*
	%t144 = sext i32 %t54 to i64
	%t143 = getelementptr inbounds i8, i8* %t142, i64 %t144
	%t53 = bitcast i8* %t143 to i32*
	%t56 = load i32, i32* %t53, align 4
	%t57 = sitofp i32 %t56 to float
	%t58 = fcmp one float %t57, 0xbff0000000000000
	br i1 %t58, label %.L26, label %.L28
.L26:
	%t145 = load i32, i32* %l8, align 4
	%t146 = load i32, i32* @n, align 4
	%t59 = add nsw i32 %t145, %t146
	%t147 = load i32, i32* %l8, align 4
	call void @mmerge(i32 %t147, i32 %t59)
	br label %.L28
.L28:
	%t148 = load i32, i32* %l3, align 4
	%t60 = icmp sgt i32 %t148, 1
	br i1 %t60, label %.L33, label %.L32
.L33:
	%t149 = load i32, i32* %l8, align 4
	%t150 = load i32, i32* @n, align 4
	%t61 = sub nsw i32 %t149, %t150
	%t63 = mul nsw i32 %t61, 4
	%t151 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t152 = bitcast i32* %t151 to i8*
	%t154 = sext i32 %t63 to i64
	%t153 = getelementptr inbounds i8, i8* %t152, i64 %t154
	%t62 = bitcast i8* %t153 to i32*
	%t65 = load i32, i32* %t62, align 4
	%t66 = sitofp i32 %t65 to float
	%t67 = fcmp one float %t66, 0xbff0000000000000
	br i1 %t67, label %.L30, label %.L32
.L30:
	%t155 = load i32, i32* %l8, align 4
	%t156 = load i32, i32* @n, align 4
	%t68 = sub nsw i32 %t155, %t156
	%t157 = load i32, i32* %l8, align 4
	call void @mmerge(i32 %t157, i32 %t68)
	br label %.L32
.L32:
	%t70 = mul nsw i32 0, 4
	%t158 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t159 = bitcast i32* %t158 to i8*
	%t161 = sext i32 %t70 to i64
	%t160 = getelementptr inbounds i8, i8* %t159, i64 %t161
	%t69 = bitcast i8* %t160 to i32*
	%t72 = load i32, i32* %t69, align 4
	%t73 = sitofp i32 %t72 to float
	%t74 = fcmp one float %t73, 0xbff0000000000000
	br i1 %t74, label %.L37, label %.L11
.L37:
	%t162 = load i32, i32* %l7, align 4
	%t76 = mul nsw i32 %t162, 4
	%t163 = getelementptr inbounds [110 x i32], [110 x i32]* @array, i64 0, i64 0
	%t164 = bitcast i32* %t163 to i8*
	%t166 = sext i32 %t76 to i64
	%t165 = getelementptr inbounds i8, i8* %t164, i64 %t166
	%t75 = bitcast i8* %t165 to i32*
	%t78 = load i32, i32* %t75, align 4
	%t79 = sitofp i32 %t78 to float
	%t80 = fcmp one float %t79, 0xbff0000000000000
	br i1 %t80, label %.L38, label %.L11
.L38:
	%t81 = call i32 @findfa(i32 0)
	%t167 = load i32, i32* %l7, align 4
	%t82 = call i32 @findfa(i32 %t167)
	%t83 = icmp eq i32 %t81, %t82
	br i1 %t83, label %.L34, label %.L11
.L34:
	store i32 1, i32* %l6, align 4
	%t168 = load i32, i32* %l5, align 4
	%t84 = add nsw i32 %t168, 1
	store i32 %t84, i32* %l9, align 4
	%t169 = load i32, i32* %l9, align 4
	call void @putint(i32 %t169)
	call void @putch(i32 10)
	br label %.L11
.L11:
	%t170 = load i32, i32* %l5, align 4
	%t85 = add nsw i32 %t170, 1
	store i32 %t85, i32* %l5, align 4
	br label %.L6
.L8:
	%t171 = load i32, i32* %l6, align 4
	%t86 = icmp eq i32 %t171, 0
	br i1 %t86, label %.L39, label %.L3
.L39:
	%t87 = fptosi float 0xbff0000000000000 to i32
	call void @putint(i32 %t87)
	call void @putch(i32 10)
	br label %.L3
.L5:
	store i32 0, i32* %l0, align 4
	%t172 = load i32, i32* %l0, align 4
	ret i32 %t172
}
declare i32 @getint(...);
declare i32 @getch(...);
declare void @putint(i32);
declare void @putch(i32);
declare void @putstr(i8*);
declare i32 @getarray(i32*);
declare void @putarray(i32, i32*);
declare float @getfloat(...);
declare void @putfloat(float);
declare i32 @getfarray(float*);
declare void @putfarray(i32, float*);
