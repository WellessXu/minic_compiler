define i32 @main() {
	%l0 = alloca i32, align 4
	%l1 = alloca i32, align 4
	%l10 = alloca i32, align 4
	%l11 = alloca i32, align 4
	%l12 = alloca i32, align 4
	%l13 = alloca i32, align 4
	%l14 = alloca i32, align 4
	%l2 = alloca i32, align 4
	%l3 = alloca i32, align 4
	%l4 = alloca i32, align 4
	%l5 = alloca i32, align 4
	%l6 = alloca [20 x i32], align 16
	%l7 = alloca [20 x i32], align 16
	%l8 = alloca [40 x i32], align 16
	%l9 = alloca i32, align 4
	store i32 3, i32* %l9, align 4
	store i32 2, i32* %l10, align 4
	%t15 = mul nsw i32 0, 1
	%t16 = mul nsw i32 %t15, 4
	%t81 = getelementptr inbounds [20 x i32], [20 x i32]* %l6, i64 0, i64 0
	%t82 = bitcast i32* %t81 to i8*
	%t84 = sext i32 %t16 to i64
	%t83 = getelementptr inbounds i8, i8* %t82, i64 %t84
	%t17 = bitcast i8* %t83 to i32*
	store i32 1, i32* %t17, align 4
	%t18 = mul nsw i32 1, 1
	%t19 = mul nsw i32 %t18, 4
	%t85 = getelementptr inbounds [20 x i32], [20 x i32]* %l6, i64 0, i64 0
	%t86 = bitcast i32* %t85 to i8*
	%t88 = sext i32 %t19 to i64
	%t87 = getelementptr inbounds i8, i8* %t86, i64 %t88
	%t20 = bitcast i8* %t87 to i32*
	store i32 2, i32* %t20, align 4
	%t21 = mul nsw i32 2, 1
	%t22 = mul nsw i32 %t21, 4
	%t89 = getelementptr inbounds [20 x i32], [20 x i32]* %l6, i64 0, i64 0
	%t90 = bitcast i32* %t89 to i8*
	%t92 = sext i32 %t22 to i64
	%t91 = getelementptr inbounds i8, i8* %t90, i64 %t92
	%t23 = bitcast i8* %t91 to i32*
	store i32 3, i32* %t23, align 4
	%t24 = mul nsw i32 0, 1
	%t25 = mul nsw i32 %t24, 4
	%t93 = getelementptr inbounds [20 x i32], [20 x i32]* %l7, i64 0, i64 0
	%t94 = bitcast i32* %t93 to i8*
	%t96 = sext i32 %t25 to i64
	%t95 = getelementptr inbounds i8, i8* %t94, i64 %t96
	%t26 = bitcast i8* %t95 to i32*
	store i32 1, i32* %t26, align 4
	%t27 = mul nsw i32 1, 1
	%t28 = mul nsw i32 %t27, 4
	%t97 = getelementptr inbounds [20 x i32], [20 x i32]* %l7, i64 0, i64 0
	%t98 = bitcast i32* %t97 to i8*
	%t100 = sext i32 %t28 to i64
	%t99 = getelementptr inbounds i8, i8* %t98, i64 %t100
	%t29 = bitcast i8* %t99 to i32*
	store i32 2, i32* %t29, align 4
	store i32 0, i32* %l1, align 4
	br label %.L0
.L13:
	%t101 = load i32, i32* %l1, align 4
	%t45 = mul nsw i32 %t101, 1
	%t46 = mul nsw i32 %t45, 4
	%t102 = getelementptr inbounds [20 x i32], [20 x i32]* %l7, i64 0, i64 0
	%t103 = bitcast i32* %t102 to i8*
	%t105 = sext i32 %t46 to i64
	%t104 = getelementptr inbounds i8, i8* %t103, i64 %t105
	%t47 = bitcast i8* %t104 to i32*
	%t106 = load i32, i32* %t47, align 4
	store i32 %t106, i32* %l11, align 4
	%t107 = load i32, i32* %l11, align 4
	store i32 %t107, i32* %l3, align 4
	%t108 = load i32, i32* %l9, align 4
	%t48 = sub nsw i32 %t108, 1
	store i32 %t48, i32* %l2, align 4
	br label %.L9
.L9:
	%t49 = sub nsw i32 0, 1
	%t109 = load i32, i32* %l2, align 4
	%t50 = icmp sgt i32 %t109, %t49
	br i1 %t50, label %.L10, label %.L11
.L10:
	%t110 = load i32, i32* %l4, align 4
	%t51 = mul nsw i32 %t110, 1
	%t52 = mul nsw i32 %t51, 4
	%t111 = getelementptr inbounds [40 x i32], [40 x i32]* %l8, i64 0, i64 0
	%t112 = bitcast i32* %t111 to i8*
	%t114 = sext i32 %t52 to i64
	%t113 = getelementptr inbounds i8, i8* %t112, i64 %t114
	%t53 = bitcast i8* %t113 to i32*
	%t115 = load i32, i32* %t53, align 4
	store i32 %t115, i32* %l12, align 4
	%t116 = load i32, i32* %l2, align 4
	%t54 = mul nsw i32 %t116, 1
	%t55 = mul nsw i32 %t54, 4
	%t117 = getelementptr inbounds [20 x i32], [20 x i32]* %l6, i64 0, i64 0
	%t118 = bitcast i32* %t117 to i8*
	%t120 = sext i32 %t55 to i64
	%t119 = getelementptr inbounds i8, i8* %t118, i64 %t120
	%t56 = bitcast i8* %t119 to i32*
	%t121 = load i32, i32* %t56, align 4
	store i32 %t121, i32* %l13, align 4
	%t122 = load i32, i32* %l3, align 4
	%t123 = load i32, i32* %l13, align 4
	%t57 = mul nsw i32 %t122, %t123
	%t124 = load i32, i32* %l12, align 4
	%t58 = add nsw i32 %t124, %t57
	store i32 %t58, i32* %l5, align 4
	%t125 = load i32, i32* %l5, align 4
	%t59 = icmp sge i32 %t125, 10
	br i1 %t59, label %.L0, label %.L1
.L0:
	%t126 = load i32, i32* %l4, align 4
	%t60 = sub nsw i32 %t126, 1
	%t61 = mul nsw i32 %t60, 1
	%t62 = mul nsw i32 %t61, 4
	%t127 = getelementptr inbounds [40 x i32], [40 x i32]* %l8, i64 0, i64 0
	%t128 = bitcast i32* %t127 to i8*
	%t130 = sext i32 %t62 to i64
	%t129 = getelementptr inbounds i8, i8* %t128, i64 %t130
	%t63 = bitcast i8* %t129 to i32*
	%t131 = load i32, i32* %t63, align 4
	store i32 %t131, i32* %l14, align 4
	%t132 = load i32, i32* %l5, align 4
	%t64 = sdiv i32 %t132, 10
	%t133 = load i32, i32* %l14, align 4
	%t65 = add nsw i32 %t133, %t64
	%t134 = load i32, i32* %l4, align 4
	%t66 = sub nsw i32 %t134, 1
	%t67 = mul nsw i32 %t66, 1
	%t68 = mul nsw i32 %t67, 4
	%t135 = getelementptr inbounds [40 x i32], [40 x i32]* %l8, i64 0, i64 0
	%t136 = bitcast i32* %t135 to i8*
	%t138 = sext i32 %t68 to i64
	%t137 = getelementptr inbounds i8, i8* %t136, i64 %t138
	%t69 = bitcast i8* %t137 to i32*
	store i32 %t65, i32* %t69, align 4
	%t139 = load i32, i32* %l4, align 4
	%t70 = mul nsw i32 %t139, 1
	%t71 = mul nsw i32 %t70, 4
	%t140 = getelementptr inbounds [40 x i32], [40 x i32]* %l8, i64 0, i64 0
	%t141 = bitcast i32* %t140 to i8*
	%t143 = sext i32 %t71 to i64
	%t142 = getelementptr inbounds i8, i8* %t141, i64 %t143
	%t72 = bitcast i8* %t142 to i32*
	%t144 = load i32, i32* %l5, align 4
	store i32 %t144, i32* %t72, align 4
	br label %.L2
.L1:
	%t145 = load i32, i32* %l4, align 4
	%t73 = mul nsw i32 %t145, 1
	%t74 = mul nsw i32 %t73, 4
	%t146 = getelementptr inbounds [40 x i32], [40 x i32]* %l8, i64 0, i64 0
	%t147 = bitcast i32* %t146 to i8*
	%t149 = sext i32 %t74 to i64
	%t148 = getelementptr inbounds i8, i8* %t147, i64 %t149
	%t75 = bitcast i8* %t148 to i32*
	%t150 = load i32, i32* %l5, align 4
	store i32 %t150, i32* %t75, align 4
	br label %.L2
.L2:
	%t151 = load i32, i32* %l2, align 4
	%t76 = sub nsw i32 %t151, 1
	store i32 %t76, i32* %l2, align 4
	%t152 = load i32, i32* %l4, align 4
	%t77 = sub nsw i32 %t152, 1
	store i32 %t77, i32* %l4, align 4
	br label %.L9
.L11:
	%t153 = load i32, i32* %l4, align 4
	%t154 = load i32, i32* %l9, align 4
	%t78 = add nsw i32 %t153, %t154
	%t79 = sub nsw i32 %t78, 1
	store i32 %t79, i32* %l4, align 4
	%t155 = load i32, i32* %l1, align 4
	%t80 = sub nsw i32 %t155, 1
	store i32 %t80, i32* %l1, align 4
	%t43 = sub nsw i32 0, 1
	%t156 = load i32, i32* %l1, align 4
	%t44 = icmp sgt i32 %t156, %t43
	br i1 %t44, label %.L13, label %.L14
.L14:
	store i32 0, i32* %l0, align 4
	%t157 = load i32, i32* %l0, align 4
	ret i32 %t157
}
declare i32 @getint(...);
declare i32 @getch(...);
declare void @putint(i32);
declare void @putch(i32);
declare void @putstr(i8*);
declare i32 @getarray(i32*);
declare void @putarray(i32, i32*);
declare float @getfloat(...);
declare void @putfloat(float);
declare i32 @getfarray(float*);
declare void @putfarray(i32, float*);
